#
# Parameters and ranges accepted by the BRKGA solver.
#

# name                      switch           type   ranges           
#population.size             "--popsize "     c      (300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1100)
population.size             "--popsize "     c      (700, 750, 800, 850, 900, 950, 1000, 1100, 1200, 1500)
#num.generations             "--gens "        c      (200, 400, 500, 600, 700, 800, 850, 900, 950, 1000, 1100, 1200, 1300, 1400, 1500 ,1600 ,1700, 1800, 1900, 2000) 
num.generations             "--gens "        c      (900, 950, 1000, 1100, 1200, 1300, 1400, 1500 ,1600 ,1700, 1800, 1900, 2000) 
#elite.percentage            "--pe "          c      (0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3) 
elite.percentage            "--pe "          c      (0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45) 
#mutant.percentage           "--pm "          c      (0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3) 
mutant.percentage           "--pm "          c      (0.01, 0.05, 0.1, 0.15) 
parents.total               "--mp "          i      (2, 8)
parents.elite               "--ep "          i      (1, 4) 
parents.bias                "--bp "          c      (constant, cubic, exponential, linear, loginverse, quadratic)
num.populations             "--npop "        i      (1, 4)
pr.pairs.num                "--npairs "      c      (1, 10, 50, 75, 100, 125, 150, 180, 220) 
pr.mindist                  "--mindist "     c      (0.001, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.98)
pr.sel                      "--psel "        c      (best, random)
#block.size                  "--alpha "       c      (0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.6, 0.8) | pr.type == "direct"
#hamming.thresh              "--hdist "       c      (0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7)  | pr.dfunc == "hamming"
pr.percentage               "--pperc "       c      (0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.6, 0.8, 1.0)
#pr.type                     "--ptype "       c      (direct, permutation)
pr.type                     "--ptype "       c      (permutation)
#pr.dfunc                    "--dfunc "       c      (kendall, hamming)
pr.frequency                "--pperiod "     c      (5, 10, 50, 80, 120, 150, 180, 210, 260, 300, 350, 400) 
reset.frequency             "--reset "       c      (350, 400, 450, 500, 550, 600, 650, 700, 800, 900, 1000, 1100)
exchange.elite.frequency    "--xelite "      c      (10, 50, 80, 120, 150, 180, 210, 260, 300, 350, 400) 
exchange.elite.immigrants   "--immigrants "  c      (1, 5, 10, 15, 20, 25, 30, 50, 60, 70, 80, 100, 120, 150)
